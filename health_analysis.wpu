#!wing
#!version=5.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('health_analysis.py'): {226: (0,
        None,
        1,
        0)}}
debug.show-args-dialog = {loc('health_analysis.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'lbzzgAmZwCcb8UZcOyo4KKZReL'\
        '2YsycO',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.17284595300261096,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('file:D:/ASASIN/gui/JobQueue.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/ASASIN/gui/JobQueue.py'),
                      'GreedyBoundedSemaphore')]},
        loc('file:D:/ASASIN/gui/JobWorker.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/ASASIN/gui/JobWorker.py'),
                      'Performance')]},
        loc('file:D:/ASASIN/gui/LogAnalysis.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/gui/LogAnalysis.py'),
                      'Create')]},
        loc('file:D:/ASASIN/gui/MainWindow.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/ASASIN/gui/MainWindow.py'),
                      'diskMonitorThread')]},
        loc('file:D:/ASASIN/gui/SasImage.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/ASASIN/gui/SasImage.py'),
                      'cmap')]},
        loc('file:D:/ASASIN/gui/main.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/ASASIN/gui/main.py'),
                      'app')]},
        loc('file:D:/ASASIN/gui/ssam.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/gui/ssam.py'),
                      'containsData')]},
        loc('file:D:/ASASIN/src/python/bgfTools/all_on_one_gpu/asasinProcessDirTestFixture.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/src/python/bgfTools/all_on_one_gpu/asasinProcessDirTestFixture.py'),
                      'asasinProcessDirectory')]},
        loc('file:D:/ASASIN/src/python/bgfTools/asasin_san_diego/asasinBgf.wpr'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:D:/ASASIN/src/python/bgfTools/asasin_san_diego/asasinProcessDirTestFixture.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/src/python/bgfTools/asasin_san_diego/asasinProcessDirTestFixture.py'),
                      'asasinCanProcess')]},
        loc('file:D:/ASASIN/src/python/idgTools/asasinProcessDirTestFixture.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/src/python/idgTools/asasinProcessDirTestFixture.py'),
                      'asasinProcessDirectory')]},
        loc('file:D:/ASASIN/src/python/idgTools/beamformer.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/ASASIN/src/python/idgTools/beamformer.py'),
                      'beamformerWholeImage')]},
        loc('file:D:/ASASIN/src/python/idgTools/csas.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/ASASIN/src/python/idgTools/csas.py'),
                      'circleObj')]},
        loc('file:D:/ASASIN/src/python/idgTools/csasBeamformer.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/src/python/idgTools/csasBeamformer.py'),
                      'beamform')]},
        loc('file:D:/ASASIN/src/python/idgTools/dat2hdf.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/src/python/idgTools/dat2hdf.py'),
                      'dat2hdf')]},
        loc('file:D:/ASASIN/src/python/idgTools/dsp.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/src/python/idgTools/dsp.py'),
                      'argmax2')]},
        loc('file:D:/ASASIN/src/python/idgTools/multispectralSasTestFixture.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/ASASIN/src/python/idgTools/multispectralSasTestFixture.py'),
                      'algos')]},
        loc('file:D:/ASASIN/src/python/idgTools/onr-hdr/main.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/src/python/idgTools/onr-hdr/main.py'),
                      'acutance')]},
        loc('file:D:/ASASIN/src/python/idgTools/ssam3RxTxPos.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/src/python/idgTools/ssam3RxTxPos.py'),
                      'acommsDeconfliction')]},
        loc('file:D:/ASASIN/src/python/idgTools/utils.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/src/python/idgTools/utils.py'),
                      'cleanupResults')]},
        loc('file:D:/ASASIN/src/python/packages/sasTools/adaptiveTvg.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/src/python/packages/sasTools/adaptiveTvg.py'),
                      'algo1')]},
        loc('file:D:/ASASIN/src/python/packages/sasTools/hdfTools.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/ASASIN/src/python/packages/sasTools/hdfTools.py'),
                      'hdfFile')]},
        loc('file:D:/ASASIN/src/python/packages/sasTools/multispectralProcessing.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/src/python/packages/sasTools/multispectralProcessing.py'),
                      'cfarSaliency')]},
        loc('file:D:/ASASIN/src/python/packages/sasTools/toneMap.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/src/python/packages/sasTools/toneMap.py'),
                      'bestLogDisplay')]},
        loc('file:D:/ASASIN/src/python/packages/sasTools/utilities.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/src/python/packages/sasTools/utilities.py'),
                      'axesextent')]},
        loc('file:D:/ASASIN/src/python/viewer/ImUtils.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/ASASIN/src/python/viewer/ImUtils.py'),
                      'colormap')]},
        loc('file:D:/HFPE/development/idgTools/classifier.py'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/HFPE/development/idgTools/classifier.py'),
                      'allFiles')]},
        loc('file:D:/HFPE/development/idgTools/generator_test.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/HFPE/development/idgTools/generator_test.py'),
                      'allFiles')]},
        loc('file:D:/HFPE/development/idgTools/imageTools.py'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/HFPE/development/idgTools/imageTools.py'),
                      'Call')]},
        loc('file:D:/HFPE/development/idgTools/trainer.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/HFPE/development/idgTools/trainer.py'),
                      'allFiles')]},
        loc('file:D:/tvg sandbox/sastools/hdfTools.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:D:/tvg sandbox/tvg.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/tvg sandbox/tvg.py'),
                      'main')]},
        loc('file:D:/tvg/tvg.py'): {'column-widths': [1.0],
                                    'expanded-nodes': [],
                                    'selected-nodes': [None],
                                    'top-node': None},
        loc('file:J:/asasin/src/python/ejrTools/hdf5testdriver.py'): {'colum'\
        'n-widths': [1.0],
        'expanded-nodes': [[('function def',
                             loc('file:J:/asasin/src/python/ejrTools/hdf5testdriver.py'),
                             'main')]],
        'selected-nodes': [[('function def',
                             loc('file:J:/asasin/src/python/ejrTools/hdf5testdriver.py'),
                             'main')]],
        'top-node': [('function def',
                      loc('file:J:/asasin/src/python/ejrTools/hdf5testdriver.py'),
                      'main')]},
        loc('file:J:/asasin/src/python/ejrTools/pythonpsuedocodes.py'): {'co'\
        'lumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:J:/asasin/src/python/ejrTools/pythonpsuedocodes.py'),
                      'ceast')]},
        loc('file:J:/asasin/src/python/ejrTools/sastools.py'): {'column-widt'\
        'hs': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('file:J:/asasin/src/python/ejrTools/sastools.py'),
                             'anisodiff')]],
        'top-node': [('function def',
                      loc('file:J:/asasin/src/python/ejrTools/sastools.py'),
                      'anisodiff')]},
        loc('../../../../../../Python32/Lib/site-packages/PIL/Image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python32/Lib/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../../../../../../Python32/Lib/site-packages/PIL/PngImagePlugin.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python32/Lib/site-packages/PIL/PngImagePlugin.py'),
                      'ChunkStream')]},
        loc('../../../../../../Python32/Lib/site-packages/matplotlib/artist.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python32/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../../../../../Python32/Lib/site-packages/matplotlib/axes.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python32/Lib/site-packages/matplotlib/axes.py'),
                      'Axes')]},
        loc('../../../../../../Python32/Lib/site-packages/matplotlib/colorbar.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python32/Lib/site-packages/matplotlib/colorbar.py'),
                      'Colorbar')]},
        loc('../../../../../../Python32/Lib/site-packages/matplotlib/image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python32/Lib/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('../../../../../../Python32/Lib/site-packages/matplotlib/pyplot.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python32/Lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../../../../../Python32/Lib/site-packages/numpy/core/_methods.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python32/Lib/site-packages/numpy/core/_methods.py'),
                      'umr_all')]},
        loc('../../../../../../Python32/Lib/site-packages/numpy/core/fromnumeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python32/Lib/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('../../../../../../Python32/Lib/site-packages/numpy/core/numeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python32/Lib/site-packages/numpy/core/numeric.py'),
                      'allclose')]},
        loc('../../../../../../Python32/Lib/site-packages/numpy/lib/function_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python32/Lib/site-packages/numpy/lib/function_base.py'),
                      'add_newdoc')]},
        loc('../../../../../../Python32/Lib/site-packages/numpy/lib/stride_tricks.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python32/Lib/site-packages/numpy/lib/stride_tricks.py'),
                      'as_strided')]},
        loc('../../../../../../Python32/Lib/site-packages/numpy/lib/twodim_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python32/Lib/site-packages/numpy/lib/twodim_base.py'),
                      'diag')]},
        loc('../../../../../../Python32/Lib/site-packages/scipy/optimize/optimize.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python32/Lib/site-packages/scipy/optimize/optimize.py'),
                      'approx_fhess_p')]},
        loc('../../../../../../Python32/Lib/site-packages/scipy/optimize/tnc.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python32/Lib/site-packages/scipy/optimize/tnc.py'),
                      'CONSTANT')]},
        loc('../../../../../../Python32/Lib/site-packages/scipy/signal/bsplines.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python32/Lib/site-packages/scipy/signal/bsplines.py'),
                      'bspline')]},
        loc('../../../../../../Python32/Lib/site-packages/scipy/signal/signaltools.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python32/Lib/site-packages/scipy/signal/signaltools.py'),
                      'cmplx_sort')]},
        loc('../../../../../../Python32/Lib/site-packages/scipy/sparse/base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python32/Lib/site-packages/scipy/sparse/base.py'),
                      'issparse')]},
        loc('../../../../../../Python32/Lib/site-packages/scipy/sparse/compressed.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python32/Lib/site-packages/scipy/sparse/compressed.py'),
                      '_cs_matrix')]},
        loc('../../../../../../Python32/Lib/site-packages/scipy/special/__init__.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python32/Lib/site-packages/scipy/special/basic.py'),
                      '')]},
        loc('../../../../../../Python32/Lib/site-packages/scipy/stats/distributions.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python32/Lib/site-packages/scipy/stats/distributions.py'),
                      'all')]},
        loc('../../../../../../Python34/Lib/site-packages/h5py/_hl/base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python34/Lib/site-packages/h5py/_hl/base.py'),
                      'CommonStateObject')]},
        loc('../../../../../../Python34/Lib/site-packages/h5py/_hl/files.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python34/Lib/site-packages/h5py/_hl/files.py'),
                      'File')]},
        loc('../../../../../../Python34/Lib/site-packages/matplotlib/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python34/Lib/site-packages/matplotlib/afm.py'),
                      '')]},
        loc('../../../../../../Python34/Lib/site-packages/matplotlib/artist.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../../../../../Python34/Lib/site-packages/matplotlib/backend_bases.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python34/Lib/site-packages/matplotlib/backend_bases.py'),
                      'CloseEvent')]},
        loc('../../../../../../Python34/Lib/site-packages/matplotlib/backends/backend_agg.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python34/Lib/site-packages/matplotlib/backends/backend_agg.py'),
                      'backend_version')]},
        loc('../../../../../../Python34/Lib/site-packages/matplotlib/cm.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python34/Lib/site-packages/matplotlib/cm.py'),
                      'cmapname')]},
        loc('../../../../../../Python34/Lib/site-packages/matplotlib/colors.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python34/Lib/site-packages/matplotlib/colors.py'),
                      'BoundaryNorm')]},
        loc('../../../../../../Python34/Lib/site-packages/matplotlib/figure.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python34/Lib/site-packages/matplotlib/figure.py'),
                      'AxesStack')]},
        loc('../../../../../../Python34/Lib/site-packages/matplotlib/fontconfig_pattern.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python34/Lib/site-packages/matplotlib/fontconfig_pattern.py'),
                      'family_escape')]},
        loc('../../../../../../Python34/Lib/site-packages/matplotlib/image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python34/Lib/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('../../../../../../Python34/Lib/site-packages/matplotlib/pyplot.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/Lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../../../../../Python34/Lib/site-packages/numpy/core/_methods.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python34/Lib/site-packages/numpy/core/_methods.py'),
                      'umr_all')]},
        loc('../../../../../../Python34/Lib/site-packages/numpy/core/fromnumeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/Lib/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('../../../../../../Python34/Lib/site-packages/numpy/core/function_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/Lib/site-packages/numpy/core/function_base.py'),
                      'linspace')]},
        loc('../../../../../../Python34/Lib/site-packages/numpy/lib/function_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/Lib/site-packages/numpy/lib/function_base.py'),
                      'add_newdoc')]},
        loc('../../../../../../Python34/Lib/site-packages/numpy/lib/polynomial.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python34/Lib/site-packages/numpy/lib/polynomial.py'),
                      'poly1d')]},
        loc('../../../../../../Python34/Lib/site-packages/numpy/lib/shape_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/Lib/site-packages/numpy/lib/shape_base.py'),
                      'apply_along_axis')]},
        loc('../../../../../../Python34/Lib/site-packages/numpy/ma/core.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python34/Lib/site-packages/numpy/ma/core.py'),
                      'abs')]},
        loc('../../../../../../Python34/Lib/site-packages/scipy/interpolate/fitpack.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/Lib/site-packages/scipy/interpolate/fitpack.py'),
                      'bisplev')]},
        loc('../../../../../../Python34/Lib/site-packages/scipy/interpolate/fitpack2.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python34/Lib/site-packages/scipy/interpolate/fitpack2.py'),
                      'BivariateSpline')]},
        loc('../../../../../../Python34/Lib/site-packages/scipy/interpolate/interpolate.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python34/Lib/site-packages/scipy/interpolate/interpolate.py'),
                      'BPoly')]},
        loc('../../../../../../Python34/Lib/site-packages/scipy/interpolate/polyint.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/Lib/site-packages/scipy/interpolate/polyint.py'),
                      'approximate_taylor_polynomial')]},
        loc('../../../../../../Python34/Lib/site-packages/scipy/misc/pilutil.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/Lib/site-packages/scipy/misc/pilutil.py'),
                      'bytescale')]},
        loc('../../../../../../Python34/Lib/site-packages/scipy/ndimage/_ni_support.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/Lib/site-packages/scipy/ndimage/_ni_support.py'),
                      '_check_axis')]},
        loc('../../../../../../Python34/Lib/site-packages/scipy/ndimage/interpolation.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/Lib/site-packages/scipy/ndimage/interpolation.py'),
                      'affine_transform')]},
        loc('../../../../../../Python34/Lib/site-packages/scipy/optimize/_minimize.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/Lib/site-packages/scipy/optimize/_minimize.py'),
                      'minimize')]},
        loc('../../../../../../Python34/Lib/site-packages/scipy/optimize/optimize.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../../../Python34/Lib/site-packages/scipy/optimize/optimize.py'),
                             '__docformat__')]],
        'top-node': [('function def',
                      loc('../../../../../../Python34/Lib/site-packages/scipy/optimize/optimize.py'),
                      'approx_fhess_p')]},
        loc('../../../../../../Python34/Lib/site-packages/scipy/signal/signaltools.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/Lib/site-packages/scipy/signal/signaltools.py'),
                      'cmplx_sort')]},
        loc('../../../../../../Python34/Lib/site-packages/skimage/color/colorconv.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python34/Lib/site-packages/skimage/color/colorconv.py'),
                      'ahx_from_rgb')]},
        loc('../../../../../../Python34/Lib/xml/etree/ElementTree.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/Lib/xml/etree/ElementTree.py'),
                      'Comment')]},
        loc('../../../../../../Python34/lib/ctypes/__init__.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/lib/ctypes/__init__.py'),
                      'ARRAY')]},
        loc('../../../../../../Python34/lib/genericpath.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/lib/genericpath.py'),
                      'commonprefix')]},
        loc('../../../../../../Python34/lib/shutil.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python34/lib/shutil.py'),
                      'chown')]},
        loc('../../../../../../Python34/lib/tkinter/__init__.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python34/lib/tkinter/__init__.py'),
                      'BaseWidget')]},
        loc('../../../../../../Python35/Lib/genericpath.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../../../Python35/Lib/genericpath.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/genericpath.py'),
                      'commonprefix')]},
        loc('../../../../../../Python35/Lib/multiprocessing/process.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/multiprocessing/process.py'),
                      'active_children')]},
        loc('../../../../../../Python35/Lib/os.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python35/Lib/os.py'),
                      'environ')]},
        loc('../../../../../../Python35/Lib/site-packages/PIL/Image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python35/Lib/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../../../../../../Python35/Lib/site-packages/keras/engine/topology.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python35/Lib/site-packages/keras/engine/topology.py'),
                      'Container')]},
        loc('../../../../../../Python35/Lib/site-packages/keras/engine/training.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/site-packages/keras/engine/training.py'),
                      'batch_shuffle')]},
        loc('../../../../../../Python35/Lib/site-packages/keras/layers/core.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python35/Lib/site-packages/keras/layers/core.py'),
                      'Activation')]},
        loc('../../../../../../Python35/Lib/site-packages/keras/models.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/site-packages/keras/models.py'),
                      'load_model')]},
        loc('../../../../../../Python35/Lib/site-packages/matplotlib/artist.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../../../../../Python35/Lib/site-packages/matplotlib/axes/_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python35/Lib/site-packages/matplotlib/axes/_base.py'),
                      'is_sequence_of_strings')]},
        loc('../../../../../../Python35/Lib/site-packages/matplotlib/image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python35/Lib/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('../../../../../../Python35/Lib/site-packages/matplotlib/pyplot.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../../../Python35/Lib/site-packages/matplotlib/pyplot.py'),
                             '_show')]],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../../../../../Python35/Lib/site-packages/numpy/core/shape_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/site-packages/numpy/core/shape_base.py'),
                      'atleast_1d')]},
        loc('../../../../../../Python35/Lib/site-packages/pandas/core/generic.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python35/Lib/site-packages/pandas/core/generic.py'),
                      'NDFrame')]},
        loc('../../../../../../Python35/Lib/site-packages/pandas/core/groupby.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python35/Lib/site-packages/pandas/core/groupby.py'),
                      'ArraySplitter')]},
        loc('../../../../../../Python35/Lib/site-packages/pandas/core/indexing.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/site-packages/pandas/core/indexing.py'),
                      'check_bool_indexer')]},
        loc('../../../../../../Python35/Lib/site-packages/pandas/types/cast.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/site-packages/pandas/types/cast.py'),
                      '_astype_nansafe')]},
        loc('../../../../../../Python35/Lib/site-packages/scipy/fftpack/basic.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../../../Python35/Lib/site-packages/scipy/fftpack/basic.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/site-packages/scipy/fftpack/basic.py'),
                      'fft2')]},
        loc('../../../../../../Python35/Lib/site-packages/scipy/optimize/_lsq/least_squares.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/site-packages/scipy/optimize/_lsq/least_squares.py'),
                      'arctan')]},
        loc('../../../../../../Python35/Lib/site-packages/scipy/optimize/_minimize.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/site-packages/scipy/optimize/_minimize.py'),
                      'minimize')]},
        loc('../../../../../../Python35/Lib/site-packages/scipy/optimize/minpack.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/site-packages/scipy/optimize/minpack.py'),
                      'check_gradient')]},
        loc('../../../../../../Python35/Lib/site-packages/scipy/optimize/optimize.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/site-packages/scipy/optimize/optimize.py'),
                      'approx_fhess_p')]},
        loc('../../../../../../Python35/Lib/site-packages/scipy/signal/signaltools.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../../../Python35/Lib/site-packages/scipy/signal/signaltools.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/site-packages/scipy/signal/signaltools.py'),
                      'cmplx_sort')]},
        loc('../../../../../../Python35/Lib/site-packages/tensorflow/python/framework/tensor_util.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Python35/Lib/site-packages/tensorflow/python/framework/tensor_util.py'),
                      'constant_value')]},
        loc('../../../../../../Python35/Lib/threading.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Python35/Lib/threading.py'),
                      'activeCount')]},
        loc('../../../../../../Python35/Lib/tkinter/__init__.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python35/Lib/tkinter/__init__.py'),
                      'BaseWidget')]},
        loc('health_analysis.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('health_analysis.py'),
        'a')]},
        loc('unknown:<untitled> #4'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        u'All Classes': {'column-widths': [1.0],
                         'expanded-nodes': [],
                         'selected-nodes': [None],
                         'top-node': None},
        u'By Module': {'column-widths': [1.0],
                       'expanded-nodes': [],
                       'selected-nodes': [None],
                       'top-node': None},
        loc('../../../../../../Python35/Lib/site-packages/tensorflow/python/client/session.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Python35/Lib/site-packages/tensorflow/python/client/session.py'),
                      'BaseSession')]},
        loc('../../../../../../python32/lib/timeit.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../python32/lib/timeit.py'),
                      'default_number')]},
        loc('unknown:<untitled> #5'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('uses',
                               'tall',
                               0,
                               {}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.44516829533116176,
        'override_title': None,
        'pagelist': [('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u', ',
                                       'fReverse': False,
                                       'fSearchText': u'abnormal',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'main',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 246,
                       'folded-linenos': [],
                       'history': {u'file:D:/HFPE/development/idgTools/evaluator.py': ['a'\
        'trTiles\n',
        'enters\n',
        'len(atrTiles)\n',
        'atrTileSize\n',
        'plt.imshow(np.log10(bon+1))\n',
        'file\n',
        'bon.max()\n',
        'bon.min()\n',
        'plt.imshow(raster)\n',
        'plt.imshow(raster**0.3)\n',
        'plt.imshow(bon)\n',
        'score\n',
        'positions\n',
        'len(positions)\n',
        "metrics['score']\n",
        'tiles\n',
        'len(tiles)\n',
        'plt.imshow(tiles[0])\n',
        'tiles[0]\n',
        'tiles[0].shape\n',
        'tmp = tiles[0].reshape(1024,1024)\n',
        'tmp\n',
        'plt.imshow(tmp**0.2)\n',
        'plt.imshow(tiles[1].reshape(1024,1024)**0.2)\n',
        "plt.plot(metrics['stdev'])\n",
        "metrics['stdev'][0]\n",
        "plt.plot(metrics['stdev'][0])\n",
        'plt.imshow(tiles[2].reshape(1024,1024)**0.2)\n',
        'plt.plot(raster**0.2)\n',
        "plt.close('all')\n",
        'plt.imshow(raster**0.02)\n',
        'plt.imshow(raster**0.2)\n',
        'raster.shape\n',
        '5833/1024\n',
        "metrics['mean']\n",
        "plt.figure(); plt.plot(metrics['mean'][0])\n",
        "plt.figure(); plt.imagesc(metrics['mean'][0].reshape(5,5,))\n",
        "plt.figure(); plt.imshow(metrics['mean'][0].reshape(5,5,))\n",
        "plt.figure(); plt.imshow(metrics['entropy_30bin'][0].reshape(5,5,))"\
        "\n",
        "metrics['entropy_30bin']\n",
        "plt.figure(); plt.imshow(np.array(metrics['entropy_30bin']).reshape"\
        "(5,5,))\n",
        "plt.figure(); plt.imshow(np.array(metrics['target_score']).reshape("\
        "5,5,))\n",
        "plt.figure(); plt.imshow(np.array(metrics['lacunarity']).reshape(5,"\
        "5,))\n",
        'res\n',
        '1024/res[0]\n',
        '1024*res[0]\n',
        '1024*res[1]\n',
        'np.sqrt(10**2+12**2)\n',
        'fileList[0]\n',
        "metrics['lacunarity']\n",
        "metrics['lacunarity'][0]\n",
        "metrics['kurtosis'][0]\n",
        "metrics['kurtosis']\n",
        "metrics['stdev']\n",
        "metrics['target_score']\n",
        "metrics['x']\n",
        "metrics['y']\n",
        'centeres\n',
        'centers\n',
        'p[:,1]\n',
        'p[:,1].max()\n',
        'k.shape\n',
        'p\n',
        'metrics.keys()\n',
        'len(metrics[k])\n',
        'metrics\n',
        "metrics['stdev_log10']\n",
        'dataset[k]\n',
        'k\n',
        'metrics[k]\n',
        'dataset\n',
        'types\n',
        'numMetrics\n'],
                                   u'file:c:/Users/idg101/Desktop/New folder/repo/health_analysis/health_analysis.py': ['d'\
        'f_bm.groupby(df.index)\n',
        'df_bm.groupby(df_bm.index)\n',
        "df_bm['type'].resample('W-MON').describe()\n",
        'df_bm[0]\n',
        "df_bm['2016-11-29']\n",
        "df_bm['2016-11-29'].dt\n",
        'df_bm.index\n',
        'df_bm.index.week\n',
        "df_bm.groupby(df_bm['year_week'])\n",
        "df_bm.groupby(df_bm['year_week']).describe()\n",
        "df_bm['type', df_bm.index].groupby(df_bm['year_week']).describe()\n",
        "df_bm[['type', df_bm.index]].groupby(df_bm['year_week']).describe()"\
        "\n",
        "df_bm[['type', 'datetime']].groupby(df_bm['year_week']).describe()"\
        "\n",
        "df_bm['type'].groupby(df_bm['year_week']).describe()[0]\n",
        "df_bm['type'].groupby(df_bm['year_week']).describe()[1]\n",
        "df_bm['type'].groupby(df_bm['year_week']).describe()['104936']\n",
        "df_bm['type'].groupby(df_bm['year_week']).describe()\n",
        'pd\n',
        'pd.boxplot_frame_groupby\n',
        'import pandas\n',
        'boxplot_frame_groupby\n',
        'import itertools\n',
        "df_bm['type'].groupby(df_bm['year_week']).boxplot\n",
        "df_bm['type'].groupby(df_bm['year_week']).max()\n",
        "df_bm['type'].groupby(df_bm['year_week']).mean()\n",
        "df_bm['type'].groupby(df_bm['year_week']).std()\n",
        "df_bm['type'].groupby(df_bm['year_week'])\n",
        "df_bm.boxplot('year_week', 'type')\n",
        "df_bm.boxplot('type', 'year_week')\n",
        'p.show()\n',
        'df_bm.index.year\n',
        ')\n',
        'datetime.datetime(df_bm.index.year, df_bm.index.month)\n',
        'datetime.datetime(df_bm.index.year[0], df_bm.index.month[0])\n',
        'datetime.datetime(df_bm.index.year[0], df_bm.index.month[0], 1)\n',
        'datetime.datetime(df_bm.index.year[0], df_bm.index.month[0], df_bm.'\
        'index.day[0])\n',
        'dt.weekday\n',
        'dt.weekday()\n',
        'dt = datetime.datetime(df_bm.index.year[0], df_bm.index.month[0], d'\
        'f_bm.index.day[0])\n',
        'start = dt - datetime.timedelta(days=dt.weekday())\n',
        'start\n',
        'pd.to_datetime(arg)\n',
        'index\n',
        'index.year\n',
        'row\n',
        'dt = datetime.date(index.year, index.month, index.day)\n',
        'dt\n',
        "df_bm.loc[index, 'year_week'] = dt - datetime.timedelta(days=dt.wee"\
        "kday()) \n",
        "tmp = df_bm['type'].resample('W-SUN').mean()\ntmp2 = df_bm[['loose'"\
        ",'hard']].resample('W-SUN').sum()\ntmp2['total'] = tmp2['loose'] + "\
        "tmp2['hard']\n\n",
        'tmp\n',
        "df_bm.grouby('year_week')\n",
        "pd.grouby('year_week')\n",
        'bm_df\n',
        'df_bm\n',
        "df_bm.groupby('year_week')\n",
        "df_bm.groupby('year_week').mean()\n",
        'plt.figure()\n',
        "plt.plot(df_bm.groupby('year_week').mean()['type'])\n",
        'plt.axes\n',
        'plt.axes()\n',
        "p = df_bm.boxplot('type', 'year_week', whis=np.inf, showfliers=True"\
        ")\n",
        'p\n',
        'plt.show()\n',
        "df_bm.groupby('year_week').mean()['type']\n",
        'df\n',
        'dfSpreadsheet\n']},
                       'launch-id': None,
                       'sel-line': 265,
                       'sel-line-start': 13320,
                       'selection_end': 13320,
                       'selection_start': 13320}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 157,
                       'selection_end': 157,
                       'selection_start': 157}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('bookmarks',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('health_analysis.py'),
        {'attrib-starts': [],
         'first-line': 68,
         'folded-linenos': [],
         'sel-line': 83,
         'sel-line-start': 2877,
         'selection_end': 2902,
         'selection_start': 2894},
        1488832479.829],
        [loc('health_analysis.py'),
         {'attrib-starts': [],
          'first-line': 69,
          'folded-linenos': [],
          'sel-line': 76,
          'sel-line-start': 2691,
          'selection_end': 2732,
          'selection_start': 2732},
         1488895677.784],
        [loc('../../../../../../Python35/Lib/site-packages/matplotlib/artist.py'),
         {'attrib-starts': [('Artist',
                             81),
                            ('Artist.update',
                             850),
                            ('Artist.update._update_property',
                             855)],
          'first-line': 853,
          'folded-linenos': [],
          'sel-line': 877,
          'sel-line-start': 28172,
          'selection_end': 28172,
          'selection_start': 28172},
         1488895681.233],
        [loc('health_analysis.py'),
         {'attrib-starts': [],
          'first-line': 44,
          'folded-linenos': [],
          'sel-line': 61,
          'sel-line-start': 2211,
          'selection_end': 2248,
          'selection_start': 2217},
         1488896929.834],
        [loc('../../../../../../Python35/Lib/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame',
                             93),
                            ('NDFrame.__getattr__',
                             2729)],
          'first-line': 2719,
          'folded-linenos': [],
          'sel-line': 2743,
          'sel-line-start': 95257,
          'selection_end': 95257,
          'selection_start': 95257},
         1488896958.373],
        [loc('health_analysis.py'),
         {'attrib-starts': [],
          'first-line': 41,
          'folded-linenos': [],
          'sel-line': 64,
          'sel-line-start': 2287,
          'selection_end': 2287,
          'selection_start': 2287},
         1488897158.385],
        [loc('../../../../../../Python35/Lib/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame',
                             93),
                            ('NDFrame._get_item_cache',
                             1380)],
          'first-line': 1378,
          'folded-linenos': [],
          'sel-line': 1383,
          'sel-line-start': 47028,
          'selection_end': 47028,
          'selection_start': 47028},
         1488897192.544],
        [loc('../../../../../../Python35/Lib/site-packages/pandas/core/indexing.py'),
         {'attrib-starts': [('_NDFrameIndexer',
                             53),
                            ('_NDFrameIndexer._convert_to_indexer',
                             1115)],
          'first-line': 1205,
          'folded-linenos': [],
          'sel-line': 1229,
          'sel-line-start': 45522,
          'selection_end': 45522,
          'selection_start': 45522},
         1488897219.707],
        [loc('health_analysis.py'),
         {'attrib-starts': [],
          'first-line': 41,
          'folded-linenos': [],
          'sel-line': 64,
          'sel-line-start': 2287,
          'selection_end': 2287,
          'selection_start': 2287},
         1488897582.508],
        [loc('../../../../../../Python35/Lib/site-packages/pandas/core/groupby.py'),
         {'attrib-starts': [('_GroupBy',
                             336),
                            ('_GroupBy.__getattr__',
                             519)],
          'first-line': 504,
          'folded-linenos': [],
          'sel-line': 528,
          'sel-line-start': 17399,
          'selection_end': 17399,
          'selection_start': 17399},
         1488897788.228],
        [loc('health_analysis.py'),
         {'attrib-starts': [],
          'first-line': 46,
          'folded-linenos': [],
          'sel-line': 64,
          'sel-line-start': 2338,
          'selection_end': 2417,
          'selection_start': 2417},
         1488901288.822],
        [loc('../../../../../../Python35/Lib/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame',
                             93),
                            ('NDFrame.__getattr__',
                             2729)],
          'first-line': 2719,
          'folded-linenos': [],
          'sel-line': 2743,
          'sel-line-start': 95257,
          'selection_end': 95257,
          'selection_start': 95257},
         1488901346.239],
        [loc('health_analysis.py'),
         {'attrib-starts': [],
          'first-line': 192,
          'folded-linenos': [],
          'sel-line': 198,
          'sel-line-start': 7789,
          'selection_end': 7869,
          'selection_start': 7869},
         1489375832.537],
        [loc('../../../../../../Python35/Lib/site-packages/pandas/types/cast.py'),
         {'attrib-starts': [('_astype_nansafe',
                             485)],
          'first-line': 512,
          'folded-linenos': [],
          'sel-line': 536,
          'sel-line-start': 18074,
          'selection_end': 18074,
          'selection_start': 18074},
         1489375849.115],
        [loc('health_analysis.py'),
         {'attrib-starts': [],
          'first-line': 175,
          'folded-linenos': [],
          'sel-line': 183,
          'sel-line-start': 7278,
          'selection_end': 7293,
          'selection_start': 7293},
         1489700720.553],
        [loc('../../../../../../Python35/Lib/site-packages/pandas/types/cast.py'),
         {'attrib-starts': [('_astype_nansafe',
                             485)],
          'first-line': 512,
          'folded-linenos': [],
          'sel-line': 536,
          'sel-line-start': 18074,
          'selection_end': 18074,
          'selection_start': 18074},
         1489700724.808],
        [loc('health_analysis.py'),
         {'attrib-starts': [],
          'first-line': 118,
          'folded-linenos': [],
          'sel-line': 122,
          'sel-line-start': 4658,
          'selection_end': 4739,
          'selection_start': 4739},
         1489700775.057],
        [loc('../../../../../../Python35/Lib/site-packages/pandas/types/cast.py'),
         {'attrib-starts': [('_astype_nansafe',
                             485)],
          'first-line': 512,
          'folded-linenos': [],
          'sel-line': 536,
          'sel-line-start': 18074,
          'selection_end': 18074,
          'selection_start': 18074},
         1489700777.349],
        [loc('health_analysis.py'),
         {'attrib-starts': [],
          'first-line': 118,
          'folded-linenos': [],
          'sel-line': 127,
          'sel-line-start': 4981,
          'selection_end': 4982,
          'selection_start': 4982},
         1489700811.266],
        [loc('../../../../../../Python35/Lib/site-packages/pandas/types/cast.py'),
         {'attrib-starts': [('_astype_nansafe',
                             485)],
          'first-line': 512,
          'folded-linenos': [],
          'sel-line': 536,
          'sel-line-start': 18074,
          'selection_end': 18074,
          'selection_start': 18074},
         1489700813.79]],
        20),
        'current-loc': loc('health_analysis.py'),
        'editor-state-list': [(loc('../../../../../../Python35/Lib/site-packages/pandas/types/cast.py'),
                               {'attrib-starts': [('_astype_nansafe',
        485)],
                                'first-line': 512,
                                'folded-linenos': [],
                                'sel-line': 536,
                                'sel-line-start': 18074,
                                'selection_end': 18074,
                                'selection_start': 18074}),
                              (loc('../../../../../../Python35/Lib/site-packages/pandas/core/generic.py'),
                               {'attrib-starts': [('NDFrame',
        93),
        ('NDFrame.__getattr__',
         2729)],
                                'first-line': 2719,
                                'folded-linenos': [],
                                'sel-line': 2743,
                                'sel-line-start': 95257,
                                'selection_end': 95257,
                                'selection_start': 95257}),
                              (loc('health_analysis.py'),
                               {'attrib-starts': [],
                                'first-line': 201,
                                'folded-linenos': [],
                                'sel-line': 225,
                                'sel-line-start': 8980,
                                'selection_end': 8980,
                                'selection_start': 8980})],
        'has-focus': False,
        'locked': False},
        [loc('../../../../../../Python35/Lib/site-packages/pandas/types/cast.py'),
         loc('../../../../../../Python35/Lib/site-packages/pandas/core/generic.py'),
         loc('health_analysis.py')]),
                               'open_files': [u'../../../../../../Python35/Lib/site-packages/pandas/core/generic.py',
        u'../../../../../../Python35/Lib/site-packages/pandas/types/cast.py',
        u'health_analysis.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.31130790190735697},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.10423452768729642},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (0,
                         -1,
                         1900,
                         1002)}]}
guimgr.recent-documents = [loc('health_analysis.py')]
search.search-history = [u'abnormal']
testing.stored-results = (1,
                          [],
                          {})
